<resources>
    <string name="app_name">Chat</string>
    <string name="web">343251507588-r5ad1thn0mib1dvs02mj62454n9jkk7t.apps.googleusercontent.com</string>

    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="g">Android design support library makes us easier to create some amazing animations with less code. Nowadays lots of android applications use Toolbar instead of ActionBar/AppBar because it has lots of functions and we can easily customize according to our needs. To make parallax Toolbar, expandable/collapsible toolbar some widgets like AppBarLayout, CoordinatorLayout, CollapsingToolbarLayout, etc. In this tutorial, you will learn to make expanding and collapsing ActionBar/AppBar/Toolbar and also some animations while scrolling. To Achieve parallax Scrolling effect make coordinator Layout as a base layout, add AppbarLayout, Nested Scrollview or Recyclerview as direct child layouts. Lets see how to configure parallax effect and types of Toolbar animations in this blog. Layout structure of coordinator layout is explained below. Android Design Support Library without running into CoordinatorLayout â€” many of the Views in the Design Library require a CoordinatorLayout. CoordinatorLayout : CoordinatorLayout is a super-powered FrameLayout. CoordinatorLayout is intended for two primary use cases: As a top-level application decor or chrome layout As a container for a specific interaction with one or more child views By specifying Behaviors for child views of a CoordinatorLayout you can provide many different interactions within a single parent and those views can also interact with one another. Behaviors may be used to implement a variety of interactions and additional layout modifications ranging from sliding drawers and panels to swipe-dismissable elements and buttons that stick to other elements as they move and animate. Children of a CoordinatorLayout may have an anchor. This view id must correspond to an arbitrary descendant of the CoordinatorLayout</string>
</resources>
